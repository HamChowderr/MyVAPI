openapi: 3.1.0
info:
  title: MyVAPI
  description: Manage your Vapi account with ChatGPT.
  version: 1.0.0
servers:
  - url: https://api.vapi.ai
    description: VAPI API server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /assistant:
    get:
      summary: Get assistant settings
      description: Retrieve the current settings of the virtual assistant.
      operationId: getAssistant
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
    post:
      summary: Create new assistant settings
      description: Create new settings for the virtual assistant.
      operationId: createAssistant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantInput"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
  /assistant/{id}:
    get:
      summary: Get assistant settings by ID
      description: Retrieve the settings of a specific virtual assistant by its ID.
      operationId: getAssistantById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the assistant
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
    patch:
      summary: Update assistant settings by ID
      description: Update the settings of a specific virtual assistant by its ID.
      operationId: updateAssistantById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the assistant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantInput"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
    delete:
      summary: Delete assistant settings by ID
      description: Delete the settings of a specific virtual assistant by its ID.
      operationId: deleteAssistantById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the assistant
      responses:
        "204":
          description: No content
  /call:
    get:
      summary: Retrieve a list of phone call records
      description: Get a list of phone call records.
      operationId: getPhoneCalls
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Array of phone call records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PhoneCall"
  /call/{id}:
    get:
      summary: Retrieve details of a specific phone call by ID
      description: Get the details of a specific phone call by its ID.
      operationId: getPhoneCallById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the phone call
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detailed information of the phone call
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhoneCall"
    patch:
      summary: Update phone call by ID
      description: Update the details of a specific phone call by its ID.
      operationId: updatePhoneCallById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the phone call
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatedPhoneCallResponse"
    delete:
      summary: Delete phone call by ID
      description: Delete a specific phone call by its ID.
      operationId: deletePhoneCallById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the phone call
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No content
  /call/phone:
    post:
      summary: Create a new phone call
      description: Create a new phone call record.
      operationId: createPhoneCall
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhoneCallInput"
      responses:
        "201":
          description: Phone call successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhoneCall"
  /log:
    get:
      summary: Call Logs
      description: Retrieve call logs with various query parameters.
      operationId: getCallLogs
      parameters:
        - name: callId
          in: query
          description: The ID of the call.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: This is the page number to return. Defaults to 1.
          required: false
          schema:
            type: integer
            default: 1
        - name: sortOrder
          in: query
          description: This is the sort order for pagination. Defaults to 'ASC'.
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: integer
            default: 100
        - name: createdAtGt
          in: query
          description: This will return items where the createdAt is greater than the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtLt
          in: query
          description: This will return items where the createdAt is less than the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtGe
          in: query
          description: This will return items where the createdAt is greater than or equal to the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtLe
          in: query
          description: This will return items where the createdAt is less than or equal to the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtGt
          in: query
          description: This will return items where the updatedAt is greater than the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtLt
          in: query
          description: This will return items where the updatedAt is less than the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtGe
          in: query
          description: This will return items where the updatedAt is greater than or equal to the specified value.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtLe
          in: query
          description: This will return items where the updatedAt is less than or equal to the specified value.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        callId:
                          type: string
                        orgId:
                          type: string
                        log:
                          type: string
                        level:
                          type: string
                          enum:
                            - INFO
                            - WARN
                            - ERROR
                        time:
                          type: string
                          format: date-time
                  metadata:
                    type: object
                    properties:
                      itemsPerPage:
                        type: integer
                      totalItems:
                        type: integer
                      currentPage:
                        type: integer
  /squad:
    get:
      summary: Retrieve a list of squads
      description: Get a list of squads.
      operationId: getSquads
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Array of squads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Squad"
    post:
      summary: Create a new squad
      description: Create a new squad.
      operationId: createSquad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SquadInput"
      responses:
        "201":
          description: Squad successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Squad"
  /squad/{id}:
    get:
      summary: Retrieve details of a specific squad by ID
      description: Get the details of a specific squad by its ID.
      operationId: getSquadById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the squad
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Detailed information of the squad
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Squad"
    patch:
      summary: Update a squad by ID
      description: Update the details of a specific squad by its ID.
      operationId: updateSquadById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the squad
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SquadUpdateInput"
      responses:
        "200":
          description: Squad successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Squad"
    delete:
      summary: Delete a squad by ID
      description: Delete a specific squad by its ID.
      operationId: deleteSquadById
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the squad
          schema:
            type: string
      responses:
        "204":
          description: No content
  /metrics:
    get:
      summary: Retrieve metrics
      description: Get various metrics data.
      operationId: getMetrics
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Metrics data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Metrics"
  /tool:
    post:
      operationId: createTool
      summary: Create Tool
      description: Create a new tool.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolInput"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tool"
        "400":
          description: Invalid request
        "500":
          description: Internal server error
    get:
      operationId: listTools
      summary: List Tools
      description: Retrieve a list of tools.
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: integer
            default: 100
        - name: createdAtGt
          in: query
          description: Return items created after the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtLt
          in: query
          description: Return items created before the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtGe
          in: query
          description: Return items created on or after the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtLe
          in: query
          description: Return items created on or before the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtGt
          in: query
          description: Return items updated after the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtLt
          in: query
          description: Return items updated before the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtGe
          in: query
          description: Return items updated on or after the specified date.
          required: false
          schema:
            type: string
            format: date-time
        - name: updatedAtLe
          in: query
          description: Return items updated on or before the specified date.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tool"
        "400":
          description: Invalid request
        "500":
          description: Internal server error
  /tool/{id}:
    get:
      operationId: getToolById
      summary: Get Tool
      description: Retrieve details of a specific tool by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the tool to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tool"
        "400":
          description: Invalid request
        "500":
          description: Internal server error
    patch:
      operationId: updateToolById
      summary: Update Tool
      description: Update details of a specific tool by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the tool to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolInput"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tool"
        "400":
          description: Invalid request
        "500":
          description: Internal server error
    delete:
      operationId: deleteToolById
      summary: Delete Tool
      description: Delete a specific tool by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the tool to delete
          schema:
            type: string
      responses:
        "204":
          description: No content
  /customer:
    post:
      summary: Create a new customer
      description: Create a new customer record.
      operationId: createCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: string
      responses:
        "201":
          description: Customer successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  orgId:
                    type: string
                  name:
                    type: string
                  number:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    get:
      summary: Retrieve a list of customers
      description: Get a list of customer records.
      operationId: getCustomers
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    orgId:
                      type: string
                    name:
                      type: string
                    number:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
  /customer/{id}:
    get:
      summary: Retrieve details of a specific customer by ID
      description: Get the details of a specific customer by its ID.
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the customer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  orgId:
                    type: string
                  name:
                    type: string
                  number:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    patch:
      summary: Update a customer by ID
      description: Update the details of a specific customer by its ID.
      operationId: updateCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                number:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  orgId:
                    type: string
                  name:
                    type: string
                  number:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    delete:
      summary: Delete a customer by ID
      description: Delete a specific customer by its ID.
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the customer
          schema:
            type: string
      responses:
        "204":
          description: No content
components:
  schemas:
    Assistant:
      type: object
      properties:
        transcriber:
          $ref: "#/components/schemas/Transcriber"
        model:
          $ref: "#/components/schemas/Model"
        voice:
          $ref: "#/components/schemas/Voice"
        forwardingPhoneNumber:
          type: string
        recordingEnabled:
          type: boolean
        endCallFunctionEnabled:
          type: boolean
        dialKeypadFunctionEnabled:
          type: boolean
        hipaaEnabled:
          type: boolean
        clientMessages:
          type: array
          items:
            type: string
        serverMessages:
          type: array
          items:
            type: string
        silenceTimeoutSeconds:
          type: integer
        responseDelaySeconds:
          type: number
        llmRequestDelaySeconds:
          type: number
        numWordsToInterruptAssistant:
          type: integer
        maxDurationSeconds:
          type: integer
        backgroundSound:
          type: string
        name:
          type: string
        forwardingPhoneNumbers:
          type: array
          items:
            $ref: "#/components/schemas/PhoneNumber"
        firstMessage:
          type: string
        voicemailDetectionEnabled:
          type: boolean
        voicemailMessage:
          type: string
        endCallMessage:
          type: string
        endCallPhrases:
          type: array
          items:
            type: string
        metadata:
          type: object
        serverUrl:
          type: string
        serverUrlSecret:
          type: string
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AssistantInput:
      type: object
      properties:
        transcriber:
          $ref: "#/components/schemas/TranscriberInput"
        model:
          $ref: "#/components/schemas/ModelInput"
        voice:
          $ref: "#/components/schemas/VoiceInput"
        forwardingPhoneNumber:
          type: string
        recordingEnabled:
          type: boolean
        endCallFunctionEnabled:
          type: boolean
        dialKeypadFunctionEnabled:
          type: boolean
        hipaaEnabled:
          type: boolean
        clientMessages:
          type: array
          items:
            type: string
        serverMessages:
          type: array
          items:
            type: string
        silenceTimeoutSeconds:
          type: integer
        responseDelaySeconds:
          type: number
        llmRequestDelaySeconds:
          type: number
        numWordsToInterruptAssistant:
          type: integer
        maxDurationSeconds:
          type: integer
        backgroundSound:
          type: string
        name:
          type: string
        forwardingPhoneNumbers:
          type: array
          items:
            $ref: "#/components/schemas/PhoneNumberInput"
        firstMessage:
          type: string
        voicemailDetectionEnabled:
          type: boolean
        voicemailMessage:
          type: string
        endCallMessage:
          type: string
        endCallPhrases:
          type: array
          items:
            type: string
        metadata:
          type: object
        serverUrl:
          type: string
        serverUrlSecret:
          type: string
    Transcriber:
      type: object
      properties:
        provider:
          type: string
        model:
          type: string
        language:
          type: string
        keywords:
          type: array
          items:
            type: string
    TranscriberInput:
      type: object
      properties:
        provider:
          type: string
        model:
          type: string
        language:
          type: string
        keywords:
          type: array
          items:
            type: string
    Model:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        provider:
          type: string
        model:
          type: string
        fallbackModels:
          type: array
          items:
            type: string
        semanticCachingEnabled:
          type: boolean
        temperature:
          type: number
        functions:
          type: array
          items:
            $ref: "#/components/schemas/Function"
        maxTokens:
          type: integer
    ModelInput:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessageInput"
        provider:
          type: string
        model:
          type: string
        fallbackModels:
          type: array
          items:
            type: string
        semanticCachingEnabled:
          type: boolean
        temperature:
          type: number
        functions:
          type: array
          items:
            $ref: "#/components/schemas/FunctionInput"
        maxTokens:
          type: integer
    Message:
      type: object
      properties:
        content:
          type: string
        role:
          type: string
        function_call:
          type: object
        tool_calls:
          type: array
          items:
            type: object
    MessageInput:
      type: object
      properties:
        content:
          type: string
        role:
          type: string
        function_call:
          type: object
        tool_calls:
          type: array
          items:
            type: object
    Function:
      type: object
      properties:
        name:
          type: string
        async:
          type: boolean
        description:
          type: string
        parameters:
          type: object
          properties:
            type:
              type: string
            properties:
              type: object
            required:
              type: array
              items:
                type: string
        serverUrl:
          type: string
        serverUrlSecret:
          type: string
    FunctionInput:
      type: object
      properties:
        name:
          type: string
        async:
          type: boolean
        description:
          type: string
        parameters:
          type: object
          properties:
            type:
              type: string
            properties:
              type: object
            required:
              type: array
              items:
                type: string
        serverUrl:
          type: string
        serverUrlSecret:
          type: string
    Voice:
      type: object
      properties:
        provider:
          type: string
        voiceId:
          type: string
        speed:
          type: number
    VoiceInput:
      type: object
      properties:
        provider:
          type: string
        voiceId:
          type: string
        speed:
          type: number
    PhoneNumber:
      type: object
      properties:
        number:
          type: string
        sipUri:
          type: string
        message:
          type: string
    PhoneNumberInput:
      type: object
      properties:
        number:
          type: string
        sipUri:
          type: string
        message:
          type: string
    PhoneCall:
      type: object
      properties:
        type:
          type: string
        phoneCallProvider:
          type: string
        phoneCallTransport:
          type: string
        status:
          type: string
        endedReason:
          type: string
        maxDurationSeconds:
          type: integer
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        cost:
          type: integer
        costBreakdown:
          type: object
          properties:
            transport:
              type: integer
            stt:
              type: integer
            llm:
              type: integer
            tts:
              type: integer
            vapi:
              type: integer
            total:
              type: integer
            llmPromptTokens:
              type: integer
            llmCompletionTokens:
              type: integer
            ttsCharacters:
              type: integer
            analysisCostBreakdown:
              type: object
              properties:
                summary:
                  type: integer
                summaryPromptTokens:
                  type: integer
                summaryCompletionTokens:
                  type: integer
                structuredData:
                  type: integer
                structuredDataPromptTokens:
                  type: integer
                structuredDataCompletionTokens:
                  type: integer
                successEvaluation:
                  type: integer
                successEvaluationPromptTokens:
                  type: integer
                successEvaluationCompletionTokens:
                  type: integer
        transcript:
          type: string
        recordingUrl:
          type: string
        stereoRecordingUrl:
          type: string
        summary:
          type: string
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        phoneCallProviderId:
          type: string
        phoneCallProviderBypassEnabled:
          type: boolean
        phoneCallProviderDetails:
          type: object
          properties:
            statusCallbackEvent:
              type: string
            machineDetection:
              type: string
            to:
              type: string
            from:
              type: string
            twiml:
              type: string
            statusCallback:
              type: string
            asyncAmd:
              type: string
            asyncAmdStatusCallback:
              type: string
            record:
              type: boolean
        webCallUrl:
          type: string
        webCallSipUri:
          type: string
        forwardedPhoneNumber:
          type: string
        assistantId:
          type: string
        assistant:
          $ref: "#/components/schemas/Assistant"
        customerId:
          type: string
        customer:
          type: object
          properties:
            number:
              type: string
            name:
              type: string
            extension:
              type: string
        phoneNumberId:
          type: string
        phoneNumber:
          type: object
          properties:
            twilioPhoneNumber:
              type: string
            twilioAccountSid:
              type: string
            twilioAuthToken:
              type: string
            name:
              type: string
            assistantId:
              type: string
            serverUrl:
              type: string
            serverUrlSecret:
              type: string
        metadata:
          type: object
    PhoneCallInput:
      type: object
      properties:
        type:
          type: string
        phoneCallProvider:
          type: string
        phoneCallTransport:
          type: string
        status:
          type: string
        endedReason:
          type: string
        maxDurationSeconds:
          type: integer
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        cost:
          type: integer
        costBreakdown:
          type: object
          properties:
            transport:
              type: integer
            stt:
              type: integer
            llm:
              type: integer
            tts:
              type: integer
            vapi:
              type: integer
            total:
              type: integer
            llmPromptTokens:
              type: integer
            llmCompletionTokens:
              type: integer
            ttsCharacters:
              type: integer
        transcript:
          type: string
        recordingUrl:
          type: string
        stereoRecordingUrl:
          type: string
        summary:
          type: string
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        phoneCallProviderId:
          type: string
        phoneCallProviderBypassEnabled:
          type: boolean
        phoneCallProviderDetails:
          type: object
          properties:
            statusCallbackEvent:
              type: string
            machineDetection:
              type: string
            to:
              type: string
            from:
              type: string
            twiml:
              type: string
            statusCallback:
              type: string
            asyncAmd:
              type: string
            asyncAmdStatusCallback:
              type: string
            record:
              type: boolean
        webCallUrl:
          type: string
        webCallSipUri:
          type: string
        forwardedPhoneNumber:
          type: string
        assistantId:
          type: string
        assistant:
          $ref: "#/components/schemas/Assistant"
        customerId:
          type: string
        customer:
          type: object
          properties:
            number:
              type: string
            name:
              type: string
            extension:
              type: string
        phoneNumberId:
          type: string
        phoneNumber:
          type: object
          properties:
            twilioPhoneNumber:
              type: string
            twilioAccountSid:
              type: string
            twilioAuthToken:
              type: string
            name:
              type: string
            assistantId:
              type: string
            serverUrl:
              type: string
            serverUrlSecret:
              type: string
        metadata:
          type: object
    Squad:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/Member"
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SquadInput:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberInput"
    SquadUpdateInput:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberInput"
    Member:
      type: object
      properties:
        assistantId:
          type: string
        assistant:
          $ref: "#/components/schemas/Assistant"
        assistantOverrides:
          $ref: "#/components/schemas/Assistant"
    MemberInput:
      type: object
      properties:
        assistantId:
          type: string
        assistant:
          $ref: "#/components/schemas/AssistantInput"
        assistantOverrides:
          $ref: "#/components/schemas/AssistantInput"
    Metrics:
      type: object
      properties:
        orgId:
          type: string
        rangeStart:
          type: string
        rangeEnd:
          type: string
        bill:
          type: number
        billWithinBillingLimit:
          type: boolean
        billDailyBreakdown:
          type: object
        callActive:
          type: string
        callActiveWithinConcurrencyLimit:
          type: boolean
        callMinutes:
          type: string
        callMinutesDailyBreakdown:
          type: object
        callMinutesAverage:
          type: string
        callMinutesAverageDailyBreakdown:
          type: object
        callCount:
          type: string
        callCountDailyBreakdown:
          type: object
    Tool:
      type: object
      properties:
        async:
          type: boolean
          example: false
        messages:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - request-start
                  - request-complete
                  - request-failed
                  - request-response-delayed
              content:
                type: string
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    value:
                      type: string
                    operator:
                      type: string
                      enum:
                        - eq
              role:
                type: string
                example: assistant
              timingMilliseconds:
                type: integer
                example: 1000
        type:
          type: string
          example: make
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        function:
          type: object
          properties:
            name:
              type: string
              example: /rRz1q01yH/
            description:
              type: string
            parameters:
              type: object
              properties:
                additionalProp1:
                  type: object
                  properties:
                    type:
                      type: string
                    items:
                      type: object
                    properties:
                      type: object
                    description:
                      type: string
                    required:
                      type: array
                      items:
                        type: string
    ToolInput:
      type: object
      properties:
        async:
          type: boolean
          example: false
        messages:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - request-start
                  - request-complete
                  - request-failed
                  - request-response-delayed
              content:
                type: string
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    param:
                      type: string
                    value:
                      type: string
                    operator:
                      type: string
                      enum:
                        - eq
              role:
                type: string
                example: assistant
              timingMilliseconds:
                type: integer
                example: 1000
        type:
          type: string
          example: make
        function:
          type: object
          properties:
            name:
              type: string
              example: /rRz1q01yH/
            description:
              type: string
            parameters:
              type: object
              properties:
                additionalProp1:
                  type: object
                  properties:
                    type:
                      type: string
                    items:
                      type: object
                    properties:
                      type: object
                    description:
                      type: string
                    required:
                      type: array
                      items:
                        type: string
        server:
          type: object
          properties:
            timeoutSeconds:
              type: integer
              example: 10
            url:
              type: string
            secret:
              type: string
    UpdatedPhoneCallResponse:
      type: object
      properties:
        type:
          type: string
        messages:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
              message:
                type: string
              time:
                type: integer
              endTime:
                type: integer
              secondsFromStart:
                type: integer
              duration:
                type: integer
        phoneCallProvider:
          type: string
          enum:
            - twilio
        phoneCallTransport:
          type: string
          enum:
            - sip
        status:
          type: string
          enum:
            - queued
        endedReason:
          type: string
          enum:
            - assistant-error
        id:
          type: string
        orgId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        cost:
          type: integer
        costBreakdown:
          type: object
          properties:
            transport:
              type: integer
            stt:
              type: integer
            llm:
              type: integer
            tts:
              type: integer
            vapi:
              type: integer
            total:
              type: integer
            llmPromptTokens:
              type: integer
            llmCompletionTokens:
              type: integer
            ttsCharacters:
              type: integer
            analysisCostBreakdown:
              type: object
              properties:
                summary:
                  type: integer
                summaryPromptTokens:
                  type: integer
                summaryCompletionTokens:
                  type: integer
                structuredData:
                  type: integer
                structuredDataPromptTokens:
                  type: integer
                structuredDataCompletionTokens:
                  type: integer
                successEvaluation:
                  type: integer
                successEvaluationPromptTokens:
                  type: integer
                successEvaluationCompletionTokens:
                  type: integer
        transcript:
          type: string
        recordingUrl:
          type: string
        stereoRecordingUrl:
          type: string
        artifact:
          type: object
          properties:
            videoRecordingUrl:
              type: string
            videoRecordingStartDelaySeconds:
              type: integer
        artifactPlan:
          type: object
          properties:
            videoRecordingEnabled:
              type: boolean
        analysis:
          type: object
          properties:
            summary:
              type: string
            structuredData:
              type: object
            successEvaluation:
              type: string
        phoneCallProviderId:
          type: string
        forwardedPhoneNumber:
          type: string
        assistantId:
          type: string
        assistant:
          $ref: "#/components/schemas/Assistant"
        assistantOverrides:
          $ref: "#/components/schemas/Assistant"
        squadId:
          type: string
        squad:
          type: object
          properties:
            members:
              type: array
              items:
                type: object
                properties:
                  assistantId:
                    type: string
                  assistant:
                    $ref: "#/components/schemas/Assistant"
                  assistantOverrides:
                    $ref: "#/components/schemas/Assistant"
        phoneNumberId:
          type: string
        phoneNumber:
          type: object
          properties:
            fallbackDestination:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
                number:
                  type: string
                message:
                  type: string
                description:
                  type: string
            twilioPhoneNumber:
              type: string
            twilioAccountSid:
              type: string
            twilioAuthToken:
              type: string
            name:
              type: string
            assistantId:
              type: string
            squadId:
              type: string
            serverUrl:
              type: string
            serverUrlSecret:
              type: string
        customerId:
          type: string
        customer:
          type: object
          properties:
            number:
              type: string
            sipUri:
              type: string
            name:
              type: string
            extension:
              type: string
        name:
          type: string
